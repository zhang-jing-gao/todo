import { defineComponent, h, inject } from 'vue';
import { NBaseClose } from '../../_internal';
import { NScrollbar } from '../../scrollbar';
import { throwError } from '../../_utils';
import { drawerInjectionKey } from './interface';
const drawerContentProps = {
    title: {
        type: String
    },
    headerStyle: [Object, String],
    footerStyle: [Object, String],
    bodyStyle: [Object, String],
    bodyContentStyle: [Object, String],
    nativeScrollbar: { type: Boolean, default: true },
    scrollbarProps: Object,
    closable: Boolean
};
export default defineComponent({
    name: 'DrawerContent',
    props: drawerContentProps,
    setup() {
        const NDrawer = inject(drawerInjectionKey, null);
        if (!NDrawer) {
            throwError('drawer-content', '`n-drawer-content` must be placed inside `n-drawer`.');
        }
        const { doUpdateShow } = NDrawer;
        function handleCloseClick() {
            doUpdateShow(false);
        }
        return {
            handleCloseClick,
            mergedTheme: NDrawer.mergedThemeRef,
            mergedClsPrefix: NDrawer.mergedClsPrefixRef
        };
    },
    render() {
        const { title, mergedClsPrefix, nativeScrollbar, mergedTheme, bodyStyle, bodyContentStyle, headerStyle, footerStyle, scrollbarProps, closable, $slots } = this;
        return (h("div", { class: [
                `${mergedClsPrefix}-drawer-content`,
                nativeScrollbar &&
                    `${mergedClsPrefix}-drawer-content--native-scrollbar`
            ] },
            $slots.header || title || closable ? (h("div", { class: `${mergedClsPrefix}-drawer-header`, style: headerStyle },
                h("div", { class: `${mergedClsPrefix}-drawer-header__main` }, $slots.header !== undefined ? $slots.header() : title),
                closable && (h(NBaseClose, { onClick: this.handleCloseClick, clsPrefix: mergedClsPrefix, class: `${mergedClsPrefix}-drawer-header__close` })))) : null,
            nativeScrollbar ? (h("div", { class: `${mergedClsPrefix}-drawer-body`, style: bodyStyle },
                h("div", { class: `${mergedClsPrefix}-drawer-body-content-wrapper`, style: bodyContentStyle }, $slots))) : (h(NScrollbar, Object.assign({ themeOverrides: mergedTheme.peerOverrides.Scrollbar, theme: mergedTheme.peers.Scrollbar }, scrollbarProps, { class: `${mergedClsPrefix}-drawer-body`, contentClass: `${mergedClsPrefix}-drawer-body-content-wrapper`, contentStyle: bodyContentStyle }), $slots)),
            $slots.footer ? (h("div", { class: `${mergedClsPrefix}-drawer-footer`, style: footerStyle }, $slots.footer())) : null));
    }
});
