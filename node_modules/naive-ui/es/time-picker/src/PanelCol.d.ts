import { PropType } from 'vue';
export interface Item {
    value: string;
    disabled: boolean;
}
declare const _default: import("vue").DefineComponent<{
    clsPrefix: {
        type: StringConstructor;
        required: true;
    };
    data: {
        type: PropType<Item[]>;
        required: true;
    };
    activeValue: {
        type: PropType<number | null>;
        default: null;
    };
    onItemClick: PropType<(value: number) => void>;
}, unknown, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    clsPrefix?: unknown;
    data?: unknown;
    activeValue?: unknown;
    onItemClick?: unknown;
} & {
    data: Item[];
    clsPrefix: string;
    activeValue: number | null;
} & {
    onItemClick?: ((value: number) => void) | undefined;
}>, {
    activeValue: number | null;
}>;
export default _default;
