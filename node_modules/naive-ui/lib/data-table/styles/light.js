"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.self = void 0;
const seemly_1 = require("seemly");
const _common_1 = require("./_common");
const styles_1 = require("../../ellipsis/styles");
const styles_2 = require("../../button/styles");
const styles_3 = require("../../checkbox/styles");
const styles_4 = require("../../radio/styles");
const styles_5 = require("../../pagination/styles");
const styles_6 = require("../../scrollbar/styles");
const styles_7 = require("../../popover/styles");
const styles_8 = require("../../spin/styles");
const styles_9 = require("../../empty/styles");
const common_1 = require("../../_styles/common");
const _mixins_1 = require("../../_mixins");
const self = (vars) => {
    const { cardColor, modalColor, popoverColor, textColor2, textColor1, tableHeaderColor, tableColorHover, iconColor, primaryColor, fontWeightStrong, borderRadius, lineHeight, fontSizeSmall, fontSizeMedium, fontSizeLarge, dividerColor } = vars;
    return Object.assign(Object.assign({}, _common_1.default), { actionDividerColor: dividerColor, lineHeight,
        borderRadius,
        fontSizeSmall,
        fontSizeMedium,
        fontSizeLarge, borderColor: seemly_1.composite(cardColor, dividerColor), tdColorHover: seemly_1.composite(cardColor, tableColorHover), thColor: seemly_1.composite(cardColor, tableHeaderColor), thColorHover: seemly_1.composite(seemly_1.composite(cardColor, tableHeaderColor), tableColorHover), tdColor: cardColor, tdTextColor: textColor2, thTextColor: textColor1, thFontWeight: fontWeightStrong, thButtonColorHover: tableColorHover, thIconColor: iconColor, thIconColorActive: primaryColor, 
        // modal
        borderColorModal: seemly_1.composite(modalColor, dividerColor), tdColorHoverModal: seemly_1.composite(modalColor, tableColorHover), thColorModal: seemly_1.composite(modalColor, tableHeaderColor), thColorHoverModal: seemly_1.composite(seemly_1.composite(modalColor, tableHeaderColor), tableColorHover), tdColorModal: modalColor, 
        // popover
        borderColorPopover: seemly_1.composite(popoverColor, dividerColor), tdColorHoverPopover: seemly_1.composite(popoverColor, tableColorHover), thColorPopover: seemly_1.composite(popoverColor, tableHeaderColor), thColorHoverPopover: seemly_1.composite(seemly_1.composite(popoverColor, tableHeaderColor), tableColorHover), tdColorPopover: popoverColor, boxShadowBefore: 'inset -12px 0 8px -12px rgba(0, 0, 0, .18)', boxShadowAfter: 'inset 12px 0 8px -12px rgba(0, 0, 0, .18)' });
};
exports.self = self;
const dataTableLight = _mixins_1.createTheme({
    name: 'DataTable',
    common: common_1.commonLight,
    peers: {
        Button: styles_2.buttonLight,
        Checkbox: styles_3.checkboxLight,
        Radio: styles_4.radioLight,
        Pagination: styles_5.paginationLight,
        Scrollbar: styles_6.scrollbarLight,
        Spin: styles_8.spinLight,
        Empty: styles_9.emptyLight,
        Popover: styles_7.popoverLight,
        Ellipsis: styles_1.ellipsisLight
    },
    self: exports.self
});
exports.default = dataTableLight;
