"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vue_1 = require("vue");
const _mixins_1 = require("../../_mixins");
const styles_1 = require("../styles");
const index_cssr_1 = require("./styles/index.cssr");
const dividerProps = Object.assign(Object.assign({}, _mixins_1.useTheme.props), { titlePlacement: {
        type: String,
        default: 'center'
    }, dashed: Boolean, vertical: Boolean });
exports.default = vue_1.defineComponent({
    name: 'Divider',
    props: dividerProps,
    setup(props) {
        const { mergedClsPrefixRef } = _mixins_1.useConfig(props);
        const themeRef = _mixins_1.useTheme('Divider', 'Divider', index_cssr_1.default, styles_1.dividerLight, props, mergedClsPrefixRef);
        return {
            mergedClsPrefix: mergedClsPrefixRef,
            cssVars: vue_1.computed(() => {
                const { common: { cubicBezierEaseInOut }, self: { color, textColor, fontWeight } } = themeRef.value;
                return {
                    '--bezier': cubicBezierEaseInOut,
                    '--color': color,
                    '--text-color': textColor,
                    '--font-weight': fontWeight
                };
            })
        };
    },
    render() {
        const { $slots, titlePlacement, vertical, dashed, cssVars, mergedClsPrefix } = this;
        return (vue_1.h("div", { role: "separator", class: [
                `${mergedClsPrefix}-divider`,
                {
                    [`${mergedClsPrefix}-divider--vertical`]: vertical,
                    [`${mergedClsPrefix}-divider--no-title`]: !$slots.default,
                    [`${mergedClsPrefix}-divider--dashed`]: dashed,
                    [`${mergedClsPrefix}-divider--title-position-${titlePlacement}`]: $slots.default && titlePlacement
                }
            ], style: cssVars },
            !vertical ? (vue_1.h("div", { class: `${mergedClsPrefix}-divider__line ${mergedClsPrefix}-divider__line--left` })) : null,
            !vertical && $slots.default ? (vue_1.h(vue_1.Fragment, null,
                vue_1.h("div", { class: `${mergedClsPrefix}-divider__title` }, this.$slots),
                vue_1.h("div", { class: `${mergedClsPrefix}-divider__line ${mergedClsPrefix}-divider__line--right` }))) : null));
    }
});
