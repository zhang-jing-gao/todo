import { TreeNode } from 'treemate';
import { MenuOption, MenuGroupOption } from '../../menu/src/interface';
export declare type Key = string | number;
export declare type DropdownOption = MenuOption;
export declare type DropdownGroupOption = MenuGroupOption;
export interface DropdownIgnoredOption {
    key: Key;
    type: 'ignored' | 'divider';
    [key: string]: unknown;
}
export declare type DropdownMixedOption = DropdownOption | DropdownGroupOption | DropdownIgnoredOption;
export interface DropdownDividerOption {
    key: Key;
    type: 'divider';
    [key: string]: unknown;
}
export declare type TmNode = TreeNode<DropdownOption, DropdownGroupOption, DropdownIgnoredOption>;
export declare type OnUpdateValue = <T extends string & number & (string | number)>(value: T, option: DropdownOption) => void;
export declare type OnUpdateKeys = <T extends string[] & number[] & Array<string | number>>(keys: T) => void;
export declare type OnUpdateValueImpl = <T extends string | number | (string | number)>(value: T, option: DropdownOption) => void;
export declare type OnUpdateKeysImpl = <T extends string[] | number[] | Array<string | number>>(keys: T) => void;
