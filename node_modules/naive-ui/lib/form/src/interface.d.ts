import { InjectionKey } from 'vue';
import { ErrorList, RuleItem, ValidateOption } from 'async-validator';
import { FormSetupProps } from './Form';
export interface FormRules {
    [path: string]: FormRules | FormItemRule | FormItemRule[];
}
export declare type FormItemRuleValidatorParams = Parameters<NonNullable<RuleItem['validator']>>;
export declare type FormItemRuleValidator = (...args: FormItemRuleValidatorParams) => boolean | Error | Error[] | Promise<void> | undefined;
export declare type FormItemRuleAsyncValidator = (...args: FormItemRuleValidatorParams) => Promise<void> | undefined;
export declare type FormItemRule = Omit<RuleItem, 'validator' | 'asyncValidator'> & {
    trigger?: ValidationTrigger | string | Array<ValidationTrigger | string>;
    validator?: FormItemRuleValidator;
    asyncValidator?: FormItemRuleAsyncValidator;
};
export interface FormItemValidateOptions {
    trigger?: ValidationTrigger | string;
    callback?: ValidateCallback;
    shouldRuleBeApplied?: ApplyRule;
    options?: ValidateOption;
}
export declare type FormItemInternalValidate = (trigger: ValidationTrigger | string | null | undefined, shouldRuleBeApplied?: ApplyRule, options?: ValidateOption) => Promise<{
    valid: boolean;
    errors?: ErrorList;
}>;
export declare type FormItemValidate = ((options: FormItemValidateOptions) => Promise<void>) & ((trigger?: string, callback?: ValidateCallback) => Promise<void>);
export interface FormItemInst {
    validate: FormItemValidate;
    restoreValidation: () => void;
    path?: string;
    internalValidate: FormItemInternalValidate;
}
export declare type FormItemColRef = FormItemInst;
export declare type FormItemRowRef = FormItemInst;
export declare type FormInjection = FormSetupProps;
export declare const formInjectionKey: InjectionKey<FormInjection>;
export declare const formItemInstsInjectionKey: InjectionKey<unknown>;
export declare type LabelAlign = 'left' | 'center' | 'right';
export declare type LabelPlacement = 'left' | 'top';
export declare type Size = 'small' | 'medium' | 'large';
export declare type ValidationTrigger = 'input' | 'change' | 'blur' | 'focus';
export declare type ApplyRule = (rule: FormItemRule) => boolean;
export declare type ValidateCallback = (errors?: ErrorList) => void;
export declare type FormValidateCallback = (errors?: ErrorList[]) => void;
export declare type FormValidate = ((callback?: FormValidateCallback) => void) & (() => Promise<void>);
export interface FormInst {
    validate: FormValidate;
    restoreValidation: () => void;
}
