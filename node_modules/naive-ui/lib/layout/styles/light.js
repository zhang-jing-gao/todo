"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.self = void 0;
const seemly_1 = require("seemly");
const common_1 = require("../../_styles/common");
const styles_1 = require("../../scrollbar/styles");
const _mixins_1 = require("../../_mixins");
const self = (vars) => {
    const { textColor2, bodyColor, cardColor, dividerColor, actionColor, scrollbarColor, scrollbarColorHover, invertedColor } = vars;
    return {
        textColor: textColor2,
        textColorInverted: '#FFF',
        color: bodyColor,
        colorEmbedded: actionColor,
        headerColor: cardColor,
        headerColorInverted: invertedColor,
        footerColor: actionColor,
        footerColorInverted: invertedColor,
        headerBorderColor: dividerColor,
        headerBorderColorInverted: invertedColor,
        footerBorderColor: dividerColor,
        footerBorderColorInverted: invertedColor,
        siderBorderColor: dividerColor,
        siderBorderColorInverted: invertedColor,
        siderColor: cardColor,
        siderColorInverted: invertedColor,
        siderToggleButtonColor: 'rgba(0, 0, 0, .15)',
        siderToggleBarColor: seemly_1.composite(bodyColor, scrollbarColor),
        siderToggleBarColorHover: seemly_1.composite(bodyColor, scrollbarColorHover),
        // hack for inverted background
        __invertScrollbar: 'true'
    };
};
exports.self = self;
const layoutLight = _mixins_1.createTheme({
    name: 'Layout',
    common: common_1.commonLight,
    peers: {
        Scrollbar: styles_1.scrollbarLight
    },
    self: exports.self
});
exports.default = layoutLight;
