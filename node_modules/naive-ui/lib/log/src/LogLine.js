"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vue_1 = require("vue");
const Log_1 = require("./Log");
exports.default = vue_1.defineComponent({
    props: {
        line: {
            type: String,
            default: ''
        }
    },
    setup(props) {
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        const { trimRef, highlightRef, languageRef, mergedHljsRef } = vue_1.inject(Log_1.logInjectionKey);
        const selfRef = vue_1.ref(null);
        function setInnerHTML() {
            const trimmedLine = trimRef.value ? (props.line || '').trim() : props.line;
            if (selfRef.value) {
                selfRef.value.innerHTML = generateCodeHTML(languageRef.value, trimmedLine, false);
            }
        }
        function generateCodeHTML(language, code, trim) {
            if (trim)
                code = code.trim();
            const { value: hljs } = mergedHljsRef;
            if (hljs) {
                if (language && hljs.getLanguage(language)) {
                    return hljs.highlight(code, { language }).value;
                }
            }
            return code;
        }
        vue_1.onMounted(() => {
            if (highlightRef.value) {
                setInnerHTML();
            }
        });
        vue_1.watch(vue_1.toRef(props, 'line'), () => {
            if (highlightRef.value) {
                setInnerHTML();
            }
        });
        return {
            highlight: highlightRef,
            selfRef
        };
    },
    render() {
        const { highlight } = this;
        return vue_1.h("pre", { ref: "selfRef" }, highlight ? null : this.line);
    }
});
