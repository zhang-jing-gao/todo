"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vue_1 = require("vue");
const _internal_1 = require("../../_internal");
const progress_1 = require("../../progress");
const interface_1 = require("./interface");
exports.default = vue_1.defineComponent({
    name: 'UploadProgress',
    props: {
        show: {
            type: Boolean,
            default: false
        },
        percentage: {
            type: Number,
            required: true
        },
        status: {
            type: String,
            required: true
        },
        delay: {
            type: Number,
            default: 900
        }
    },
    setup(props) {
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        const NUpload = vue_1.inject(interface_1.uploadInjectionKey);
        return {
            mergedTheme: NUpload.mergedThemeRef
        };
    },
    render() {
        return (vue_1.h(_internal_1.NFadeInExpandTransition, null, {
            default: () => this.show ? (vue_1.h(progress_1.NProgress, { type: "line", showIndicator: false, percentage: this.percentage, status: this.status, height: 2, theme: this.mergedTheme.peers.Progress, themeOverrides: this.mergedTheme.peerOverrides.Progress })) : null
        }));
    }
});
